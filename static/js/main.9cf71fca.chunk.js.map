{"version":3,"sources":["Components/Statistics.jsx","Components/Section.jsx","Components/FeedbackOptions.jsx","Components/Notification.jsx","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","countTotal","countPositiveFeedback","Section","title","children","className","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Notification","message","App","useState","setGood","setNeutral","setBad","Object","keys","countTotalFeedback","state","console","log","Math","round","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAwBeA,MArBf,YAAuE,IAAjDC,EAAgD,EAAhDA,KAAMC,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,mBACnCC,EAAaF,IACbG,EAAwBF,IAC5B,OACE,+BACI,wCAAU,+BAAOJ,OACjB,2CAAa,+BAAOC,OACpB,uCAAS,+BAAOC,OAChB,yCAAW,+BAAOG,OAClB,qDAAwBC,EAAwB,+BAAOA,IAAgC,EAAvF,WCGDC,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACtB,OAAO,oCACH,oBAAIC,UAAU,WAAd,SAA0BF,IACzBC,MCSME,MAZf,YAAuD,IAA5BC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,gBAChC,OAAO,qBAAKH,UAAU,gBAAf,SAAgCE,EAAQE,KAAI,SAACC,GAAD,OACnD,yBAAuBC,KAAK,SAASN,UAAU,SAASO,QAAS,kBAAMJ,EAAgBE,IAAvF,cAAmGA,EAAnG,MAAeA,SCMJG,MARf,YAAmC,IAAXC,EAAU,EAAVA,QACpB,OAAO,qBAAKT,UAAU,gBAAf,SAAgCS,KCI5B,SAASC,IAAO,IAAD,EACDC,mBAAS,GADR,mBACnBrB,EADmB,KACZsB,EADY,OAEID,mBAAS,GAFb,mBAEnBpB,EAFmB,KAEVsB,EAFU,OAGJF,mBAAS,GAHL,mBAGnBnB,EAHmB,KAGdsB,EAHc,KAIpBZ,EAAUa,OAAOC,KAAK,CAAE1B,OAAMC,UAASC,QAEvCyB,EAAqB,WAEvB,OADmB3B,EAAOC,EAAUC,GAyBxC,OAAQ,sBAAKQ,UAAU,MAAf,UACJ,cAAC,EAAD,CAASF,MAAO,wBAAhB,SACA,cAAC,EAAD,CAAiBI,QAASA,EAASC,gBAlBrB,SAACE,GACf,OAAQA,GACJ,IAAK,OACDO,GAAQ,SAAAM,GAAK,OAAIA,EAAQ,KACzB,MACJ,IAAK,UACDL,GAAW,SAAAK,GAAK,OAAIA,EAAQ,KAC5B,MACJ,IAAK,MACDJ,GAAO,SAAAI,GAAK,OAAIA,EAAQ,KACxB,MACJ,QACIC,QAAQC,IAAI,6EAQpB,cAAC,EAAD,CAAStB,MAAO,aAAhB,SACSmB,IAAuB,cAAC,EAAD,CACpB3B,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOwB,EACPvB,mBA/BwB,WAEpC,OAD8B2B,KAAKC,MAAMhC,EAAO2B,IAAuB,QA8BD,cAAC,EAAD,CAAcR,QAAQ,2BC7CpGc,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9cf71fca.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Statistics ({good, neutral, bad, total, positivePercentage}) {\r\n        const countTotal = total();\r\n        const countPositiveFeedback = positivePercentage();\r\n          return (\r\n            <ul>\r\n                <li>Good: <span>{good}</span></li>\r\n                <li>Neutral: <span>{neutral}</span></li>\r\n                <li>Bad: <span>{bad}</span></li>\r\n                <li>Total: <span>{countTotal}</span></li>\r\n                <li>Positive feedback: {countPositiveFeedback ? <span>{countPositiveFeedback}</span> : 0}%</li>\r\n            </ul>)\r\n};\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number.isRequired,\r\n    neutral: PropTypes.number.isRequired,\r\n    bad: PropTypes.number.isRequired,\r\n    total: PropTypes.func.isRequired,\r\n    positivePercentage: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Statistics","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n    return <section>\r\n        <h2 className=\"feedback\">{title}</h2>\r\n        {children}\r\n        </section>\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction FeedbackOptions ({options, onLeaveFeedback}) {\r\n    return <div className=\"centerButtons\">{options.map((option) => (\r\n    <button key = {option} type=\"button\" className=\"button\" onClick={() => onLeaveFeedback(option)}> { option } </button>\r\n    ))}</div>\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n    onLeaveFeedback: PropTypes.func.isRequired,\r\n}\r\n\r\n\r\nexport default FeedbackOptions","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Notification ({message}) {\r\n    return <div className=\"centerButtons\">{message}</div>\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;","import { useState } from 'react';\nimport './App.css';\n\nimport Statistics from './Components/Statistics';\nimport Section from './Components/Section';\nimport FeedbackOptions from './Components/FeedbackOptions';\nimport Notification from './Components/Notification';\n\nexport default function App() {\n    const [good,  setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n    const options = Object.keys({ good, neutral, bad });\n\n    const countTotalFeedback = () => {\n        const countTotal = good + neutral + bad;\n        return countTotal;\n    }\n\n    const countPositiveFeedbackPercentage = () => {\n        const countPositiveFeedback = Math.round(good / countTotalFeedback() * 100);\n        return countPositiveFeedback;\n    }\n\n    const increment = (option) => {\n        switch (option) {\n            case 'good':\n                setGood(state => state + 1);\n                break;\n            case 'neutral':\n                setNeutral(state => state + 1);\n                break;\n            case 'bad':\n                setBad(state => state + 1);\n                break;\n            default:\n                console.log('пустий масив');\n        }\n        }\n        \n    return (<div className=\"App\">\n        <Section title={\"Please leave feedback\"}>\n        <FeedbackOptions options={options} onLeaveFeedback={increment}/>\n        </Section>\n        <Section title={\"Statistick\"}>\n                {countTotalFeedback() ? <Statistics\n                    good={good}\n                    neutral={neutral}\n                    bad={bad}\n                    total={countTotalFeedback}\n                    positivePercentage={countPositiveFeedbackPercentage} /> : <Notification message=\"No feedback given\" />}\n        </Section>\n      </div>\n    );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}